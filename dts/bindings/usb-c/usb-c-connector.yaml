# Copyright 2022 The Chromium OS Authors
# SPDX-License-Identifier: Apache-2.0

description: |
    A USB Type-C connector node represents a physical USB Type-C connector.
    It should be a child of a USB-C interface controller or a separate node
    when it is attached to both MUX and USB-C interface controller.

    This is based on Linux, documentation:
      https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/devicetree/bindings/connector/usb-connector.yaml?h=v5.19&id=3d7cb6b04c3f3115719235cc6866b10326de34cd

compatible: "usb-c-connector"

include: base.yaml

properties:
    tcpc:
        type: phandle
        required: true
        description: |
            Type-C Port Controller for this port.

    vbus:
        type: phandle
        required: true
        description: |
            VBUS measurement and control for this port.

    power-role:
        type: string
        required: true
        enum:
          - "sink"
          - "source"
          - "dual"
        description: |
          The Port power role. "dual" for Dual Role Port.

    try-power-role:
        type: string
        enum:
          - "sink"
          - "source"
          - "dual"
        description: |
          Preferred power role.

    data-role:
        type: string
        enum:
          - "host"
          - "device"
          - "dual"
        description: |
          The Port data role.
            * "host" for Downstream Facing Port (DFP)
            * "device" for Upstream Facing Port (UFP)
            * "dual" for Dual Role Data

    typec-power-opmode:
        type: string
        enum:
          - "default"
          - "1.5A"
          - "3.0A"
        description: |
          Initial Type C advertised power, determined by the Rp when
          operating as a Source.
          * "default" corresponds to default USB voltage and current
            defined by the  USB 2.0 and USB 3.2 specifications.
              * 5V@500mA for USB 2.0
              * 5V@900mA for USB 3.2 single-lane
              * 5V@1500mA for USB 3.2 dual-lane
          * "1.5A" and "3.0A", 5V@1.5A and 5V@3.0A.

    pd-disable:
        type: boolean
        description: |
          Disables power delivery when true

    source-pdos:
        type: array
        description: |
          An array of source Power Data Objects (PDOs).
          Use tht following macros to define the PDOs, defined in
          dt-bindings/usb-c/pd.h.
            * PDO_FIXED
            * PDO_BATT
            * PDO_VAR
            * PDO_PPS_APDO
          Valid range: 1 - 7

    sink-pdos:
        type: array
        description: |
          An array of sink Power Data Objects (PDOs).
          Use tht following macros to define the PDOs, defined in
          dt-bindings/usb-c/pd.h.
            * PDO_FIXED
            * PDO_BATT
            * PDO_VAR
            * PDO_PPS_APDO
          Valid range: 1 - 7

    sink-vdos:
        type: array
        description: |
          An array of sink Vendor Defined Objects (VDOs).
          Use tht following macros to define the VDOs, defined in
          dt-bindings/usb-c/pd.h.
            * VDO_IDH
            * VDO_CERT
            * VDO_PRODUCT
            * VDO_UFP
            * VDO_DFP
            * VDO_PCABLE
            * VDO_ACABLE
            * VDO_VPD
          Valid range: 3 - 6

    sink-vdos-v1:
        type: array
        description: |
          An array of sink Vendor Defined Objects (VDOs).
          Use tht following macros to define the VDOs, defined in
          dt-bindings/usb-c/pd.h.
            * VDO_IDH
            * VDO_CERT
            * VDO_PRODUCT
            * VDO_CABLE
            * VDO_AMA
          Valid range: 3 - 6

    op-sink-microwatt:
        type: int
        description: |
          Minimum power, in microwatts, needed by the sink. A Capability
          Mismatch is sent to the Source if the power can't be met.

    epr-supported-as-snk:
        type: boolean
        required: false
        description: |
            Is the current Port Extended Power Range (EPR) capable as a Sink?

    no-usb-suspend-may-be-set:
        type: boolean
        required: false
        description: |
            In a Request message there is a bit called No USB Suspend, which the 
            Sink sets to one if it wishes to request that it need not obey USB 
            Suspend, but instead be allowed to continue to draw power according 
            to its PD contract.

    giveback-may-be-set:
        type: boolean
        required: false
        description: |
            In a Request message there is a bit called Giveback, which the Sink 
            sets to 1 if it is prepared to lower its Operating Current to its 
            Minimum Operating Current, on demand.

    higher-capability-set:
        type: boolean
        required: false
        description: |
            In a Sink_Capabilities message there is a bit called 
            HigherCapability, which the Sink sets to 1 if it needs more than 
            vSafe5V (e.g., 12V) to provide full functionality.

    fr-swap-reqd-type-c-current-as-initial-source:
        type: int
        required: false
        description: |
            This field is used to determine if the Qualifying Product supports 
            Fast Role Swap in initial Source role.
            
            In a Sink_Capabilities message there is a field called Fast Role 
            Swap USB Type-C Current, in which the initial Source describes 
            whether it supports Fast Role Swap to become a new Sink, and if so, 
            what current it requires as a new Sink.
            Valid options are:
            0 - FR_Swap not supported
            1 - Default USB Power
            2 - 1.5A @ 5V
            3 - 3A @ 5V

    num-snk-pdos:
        type: int
        required: false
        description: |
            The number of Sink Power Data Objects (PDOs) returned by the Port 
            in a Sink_Capabilities message.
            Valid values are in the range 1 - 7.
            
            If epr-supported-as-snk is set to NO, then this field shall be 
            equal to the number of Sink PDOs defined for this Port.
            
            If epr-supported-as-snk is set to YES, then this field shall be 
            strictly less than the number of Sink PDOs defined for this Port.

    dr-swap-to-dfp-supported:
        type: boolean
        required: false
        description: |
            Set to YES if Qualifying Product can respond with an Accept to a 
            DR_Swap request to switch from a UFP to a DFP.

    dr-swap-to-ufp-supported:
        type: boolean
        required: false
        description: |
            Set to YES if Qualifying Product can respond with an Accept to a 
            DR_Swap request to switch from a DFP to a UFP.

    vconn-swap-to-on-supported:
        type: boolean
        required: false
        description: |
            Set to YES if Qualifying Product can respond with an Accept to a 
            VCONN_Swap message requesting it to start sourcing VCONN.

    vconn-swap-to-off-supported:
        type: boolean
        required: false
        description: |
            Set to YES if Qualifying Product can respond with an Accept to a 
            VCONN_Swap message requesting it to stop sourcing VCONN.

    accepts-pr-swap-as-src:
        type: boolean
        required: false
        description: |
            Set to YES if Port ever supports a PR_Swap request while operating 
            as a Source.

    accepts-pr-swap-as-snk:
        type: boolean
        required: false
        description: |
            Set to YES if Port ever supports a PR_Swap request while operating 
            as a Sink.

    requests-pr-swap-as-src:
        type: boolean
        required: false
        description: |
            Set to YES if the Qualifying Product may send a PR_Swap request 
            while operating as a Source.

    requests-pr-swap-as-snk:
        type: boolean
        required: false
        description: |
            Set to YES if the Qualifying Product may send a PR_Swap request 
            while operating as a Sink.

    # EXAMPLE:
    #
    # USB-C connector attached to a STM32 UCPD typec port controller, which has
    # power delivery support and enables SINK.
    #
    # #include <dt-bindings/usb-c/pd.h>
    #
    # vbus1: vbus {
    #     compatible = "zephyr,usb-c-vbus-adc";
    #     io-channels = <&adc2 8>;
    #     output-ohms = <49900>;
    #     full-ohms = <(330000 + 49900)>;
    # };
    #
    # ports {
    #     #address-cells = <1>;
    #     #size-cells = <0>;
    #     port1: usb-c-port@1 {
    #         compatible = "usb-c-connector";
    #         reg = <1>;
    #         tcpc = <&ucpd1>;
    #         vbus = <&vbus1>;
    #         power-role = "SINK";
    #         num-snk-pdos= <2>;
    #         sink-pdos = <PDO_FIXED(5000, 2000, PDO_FIXED_USB_COMM)
    #                      PDO_VAR(5000, 12000, 2000)>;
    #         op-sink-microwatt = <10000000>;
    #         fr-swap-reqd-type-c-current-as-initial-source= <0>;
    #         vconn-swap-to-off-supported;
    #      };
    # };
